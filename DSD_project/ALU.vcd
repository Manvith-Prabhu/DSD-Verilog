$date
	Wed Jan 18 14:15:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ALU_processor_tb $end
$var wire 4 ! old_ALU_flag_NZCV [3:0] $end
$var wire 32 " out [31:0] $end
$var wire 4 # ALU_flag_NZCV [3:0] $end
$var parameter 32 $ N $end
$var reg 32 % op1 [31:0] $end
$var reg 32 & op2 [31:0] $end
$var reg 4 ' opcode [3:0] $end
$scope module alu1 $end
$var wire 4 ( opcode [3:0] $end
$var wire 32 ) operand_1 [31:0] $end
$var wire 32 * operand_2 [31:0] $end
$var wire 4 + prev_ALU_flag_NZCV [3:0] $end
$var parameter 32 , N $end
$var reg 4 - ALU_flag_NZCV [3:0] $end
$var reg 1 . cin $end
$var reg 1 / cout $end
$var reg 32 0 inverted [31:0] $end
$var reg 32 1 out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 ,
b100000 $
$end
#0
$dumpvars
b10000001100000011000000110000001 1
bx 0
x/
x.
b1000 -
b0 +
b10100011101000111010001110100011 *
b11001001110010011100100111001001 )
b0 (
b0 '
b10100011101000111010001110100011 &
b11001001110010011100100111001001 %
b1000 #
b10000001100000011000000110000001 "
b0 !
$end
#100
b1101010011010100110101001101010 "
b1101010011010100110101001101010 1
b0 #
b0 -
b1 '
b1 (
#200
b1000 #
b1000 -
b11101011111010111110101111101011 "
b11101011111010111110101111101011 1
b10 '
b10 (
#300
b10100000101000001010000010100 "
b10100000101000001010000010100 1
b0 #
b0 -
b11 '
b11 (
#400
b1001000010010000100100001001000 "
b1001000010010000100100001001000 1
b100 '
b100 (
#500
0/
0.
b100110100100 "
b100110100100 1
b10011010010 &
b10011010010 *
b10011010010 %
b10011010010 )
b101 '
b101 (
#600
b1101100000000 "
b1101100000000 1
b1011000101110 &
b1011000101110 *
b110 '
b110 (
#700
b110 #
b110 -
1/
1.
b0 "
b0 1
b11111111111111111111101100101110 0
b10011010010 &
b10011010010 *
b111 '
b111 (
#800
b11111111111111111111101100101111 0
b110 #
b110 -
b10011010001 &
b10011010001 *
b1000 '
b1000 (
#900
b1000101011100 "
b1000101011100 1
b11111111111111111111101100101110 0
b10 #
b10 -
b1011000101110 &
b1011000101110 *
b1001 '
b1001 (
#1000
b1000101011011 "
b1000101011011 1
b10 #
b10 -
b1010 '
b1010 (
#1100
b1001011111100 "
b1001011111100 1
b0 #
b0 -
b1011 '
b1011 (
#1200
b10 #
b10 -
b10001010111000 "
b10001010111000 1
b11111111111111111111101110101001 0
b10001010111 &
b10001010111 *
b10011100001111 %
b10011100001111 )
b1100 '
b1100 (
#1300
0/
0.
b1101100000000 "
b1101100000000 1
b0 #
b0 -
b1011000101110 &
b1011000101110 *
b10011010010 %
b10011010010 )
b1101 '
b1101 (
#1400
b1011000101110 "
b1011000101110 1
b1110 '
b1110 (
#1500
b1000 #
b1000 -
b11111111111111111101100011110000 "
b11111111111111111101100011110000 1
b10011100001111 &
b10011100001111 *
b1111 '
b1111 (
#1700
